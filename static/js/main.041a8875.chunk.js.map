{"version":3,"sources":["components/loader.gif","components/Header.js","store/actions/searchHeroAction.js","components/HeroForm.js","components/HeroDescription.js","components/HeroComics.js","components/HeroLoader.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","md5","require","authAPIKeys","HeroForm","state","heroName","handleChange","e","_this","setState","target","value","handleClick","handleSubmit","preventDefault","props","searchHero","onSubmit","this","type","placeholder","onChange","onClick","Component","connect","dispatch","includes","trim","replace","publicKey","privateKey","ts","Date","now","toString","hash","getState","isLoading","setTimeout","fetch","concat","then","res","json","heroData","heroId","data","results","id","heroComics","hero","catch","err","_props$heroData","comics","name","thumbnail","urls","description","src","path","extension","alt","available","href","url","rel","map","comic","title","key","_ref","Loader","App","components_Header","components_HeroForm","components_HeroLoader","components_HeroDescription","components_HeroComics","initState","rootReducer","arguments","length","undefined","action","Object","objectSpread","alert","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.041a8875.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.de199010.gif\";","import React from \"react\";\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"header__title\">MARVEL HEROS</h1>\r\n      <p className=\"header__lead\">\r\n        Search For Your Favorite Marvel Super Heros\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","let md5 = require(\"md5\");\r\n\r\n// Keys from the marvel API for authentication\r\nconst authAPIKeys = {\r\n  publicKey: \"776d8bd43b57caf9997ca8cc2c29ef7d\",\r\n  privateKey: \"35aa7e075a342cb5b5728ddb6223073ab0c52d8a\"\r\n};\r\n\r\nexport const searchHero = heroName => {\r\n  // Formatting the hero name string\r\n  if (heroName.includes(\"spider\")) {\r\n    // Putting a hyphen in white spaces for spider class heros\r\n    heroName = heroName.trim().replace(/[^A-Z0-9]+/gi, \"-\");\r\n  } else {\r\n    // Putting a %20 in white spaces for other heros\r\n    heroName = heroName.trim().replace(/[^A-Z0-9]+/gi, \"%20\");\r\n  }\r\n\r\n  // Authentication\r\n  const { publicKey, privateKey } = authAPIKeys;\r\n  let ts = Date.now().toString();\r\n  let hash = md5(ts + privateKey + publicKey);\r\n\r\n  return (dispatch, getState) => {\r\n    // Dispatching action to show the hero description and comics loading\r\n    dispatch({\r\n      type: \"HERO_LOADING\",\r\n      isLoading: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      // Fetching the hero data by name\r\n      fetch(\r\n        `https://gateway.marvel.com/v1/public/characters?name=${heroName}&limit=1&ts=${ts}&apikey=${publicKey}&hash=${hash}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(heroData => {\r\n          let heroId = heroData.data.results[0].id;\r\n\r\n          //Fetching the Hero comics by its hero id\r\n          fetch(\r\n            `https://gateway.marvel.com/v1/public/characters/${heroId}/comics?limit=9&ts=${ts}&apikey=${publicKey}&hash=${hash}`\r\n          )\r\n            .then(res => res.json())\r\n            .then(heroComics => {\r\n              // Passing the data from the API to the Reducer\r\n              dispatch({\r\n                type: \"HERO_LOADED\",\r\n                hero: {\r\n                  heroData: heroData.data.results[0],\r\n                  heroComics: heroComics.data.results,\r\n                  isLoading: false\r\n                }\r\n              });\r\n            })\r\n            .catch(err => {\r\n              // passing an error if failed to fetch hero comics\r\n              dispatch({ type: \"ERROR\", err: err });\r\n              dispatch({ type: \"HERO_ERROR_LOADING\", isLoading: false });\r\n            });\r\n        })\r\n        .catch(err => {\r\n          // passing an error if failed to fetch hero by name\r\n          dispatch({ type: \"ERROR\", err: err });\r\n          dispatch({ type: \"HERO_ERROR_LOADING\", isLoading: false });\r\n        });\r\n    }, 1000);\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchHero } from \"../store/actions/searchHeroAction\";\r\n\r\nclass HeroForm extends Component {\r\n  state = {\r\n    heroName: null\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      heroName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleClick = e => {\r\n    e.target.value = null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.searchHero(this.state.heroName);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"hero-search\">\r\n        <p className=\"hero-search__title\"> MARVEL HEROS</p>\r\n        <form className=\"hero-search__form\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter hero name: Eg. thor\"\r\n            onChange={this.handleChange}\r\n            onClick={this.handleClick}\r\n          />\r\n          <button type=\"submit\">SEARCH</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    searchHero: heroName => {\r\n      dispatch(searchHero(heroName));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(HeroForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction HeroDescription(props) {\r\n  // Checking to see if the props are not empty\r\n  if (props.heroData) {\r\n    // destructuring and getting relevant data from the props\r\n    const { comics, name, thumbnail, urls } = props.heroData;\r\n    let { description } = props.heroData;\r\n\r\n    // checking to see if the description from the api is empty to output a different message\r\n\r\n    if (description === \"\") {\r\n      description = \"Character does not have a description\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"hero-bio\">\r\n        <div className=\"hero-bio__image\">\r\n          <img\r\n            src={`${thumbnail.path}.${thumbnail.extension}`}\r\n            alt=\"hero thumbnail\"\r\n          />\r\n        </div>\r\n        <div className=\"hero-bio__content\">\r\n          <span className=\"hero-bio__content__title\">{name}</span>\r\n          <p className=\"hero-bio__content__description\">{description}</p>\r\n          <p className=\"hero-bio__content__collection\">\r\n            <span>\r\n              Comics: <span>{comics.available}</span>\r\n            </span>\r\n          </p>\r\n          <a href={urls[0].url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <button className=\"hero-bio__content__button\">Learn More</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\n// Mapping the state from the store to the props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    heroData: state.heroData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeroDescription);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction HeroComics(props) {\r\n  // Checking to see if the heroComics data exists in the store state\r\n  if (props.heroComics) {\r\n    const { name } = props.heroData;\r\n    return (\r\n      <div className=\"hero-comics\">\r\n        <span className=\"hero-comics__title\">{name} Comics</span>\r\n        <div className=\"hero-comics__comics\">\r\n          {/* Looping through the comics data */}\r\n          {props.heroComics.map(comic => {\r\n            const { id, thumbnail, urls, title } = comic;\r\n            return (\r\n              <div key={id} className=\"hero-comics__comics__item\">\r\n                <p>{title}</p>\r\n                <a href={urls[0].url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img\r\n                    src={`${thumbnail.path}.${thumbnail.extension}`}\r\n                    alt=\"comic thumbnail\"\r\n                  />\r\n                </a>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    heroComics: state.heroComics,\r\n    heroData: state.heroData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeroComics);\r\n","import React from \"react\";\r\nimport Loader from \"./loader.gif\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction HeroLoader({ isLoading }) {\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <img src={Loader} alt=\"loader\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeroLoader);\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header.js\";\nimport HeroForm from \"./components/HeroForm\";\nimport HeroDescription from \"./components/HeroDescription\";\nimport HeroComics from \"./components/HeroComics\";\nimport HeroLoader from \"./components/HeroLoader\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <HeroForm />\n        <HeroLoader />\n        <HeroDescription />\n        <HeroComics />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// initial state to pass into the reducer\r\nconst initState = {\r\n  heroData: null,\r\n  heroComics: null,\r\n  isLoading: false\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"HERO_LOADED\":\r\n      // Setting the data from the search hero action to the application state\r\n      return {\r\n        ...state,\r\n        heroData: action.hero.heroData,\r\n        heroComics: action.hero.heroComics,\r\n        isLoading: action.hero.isLoading\r\n      };\r\n    case \"HERO_LOADING\":\r\n      // Setting the data of the searched hero to null and setting the loading property to be true\r\n      return {\r\n        ...state,\r\n        heroData: null,\r\n        heroComics: null,\r\n        isLoading: action.isLoading\r\n      };\r\n\r\n    case \"HERO_ERROR_LOADING\":\r\n      // Stopping the loading component if there was an error searching for the hero or the comics\r\n      return {\r\n        isLoading: action.isLoading\r\n      };\r\n    case \"ERROR\":\r\n      alert(\"Could not fetch data \\n\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}